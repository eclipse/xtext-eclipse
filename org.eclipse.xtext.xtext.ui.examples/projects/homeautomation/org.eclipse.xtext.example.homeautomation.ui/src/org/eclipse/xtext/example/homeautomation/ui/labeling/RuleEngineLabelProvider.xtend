/*
 * generated by Xtext
 */
package org.eclipse.xtext.example.homeautomation.ui.labeling

import com.google.inject.Inject
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider
import org.eclipse.xtext.example.homeautomation.ruleEngine.Device
import org.eclipse.xtext.example.homeautomation.ruleEngine.Rule
import org.eclipse.xtext.example.homeautomation.ruleEngine.State
import org.eclipse.xtext.xbase.ui.labeling.XbaseLabelProvider

/**
 * Provides labels for EObjects.
 *
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
class RuleEngineLabelProvider extends XbaseLabelProvider {

	@Inject
	new(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	def text(Rule rule) {
		val device = rule.deviceState.eContainer as Device
		rule.description + ' when ' + device.name + '.' + rule.deviceState.name
	}

	def image(Rule rule) {
		'rule.gif'
	}

	def image(Device device) {
		'device.gif'
	}

	def image(State state) {
		'state.gif'
	}
}
