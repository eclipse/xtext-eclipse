/**
 * generated by Xtext
 */
package org.eclipse.xtext.ui.tests.editor.contentassist.noTerminalExtension;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Polygon Based Node Shape</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see org.eclipse.xtext.ui.tests.editor.contentassist.noTerminalExtension.NoTerminalExtensionPackage#getPolygonBasedNodeShape()
 * @model
 * @generated
 */
public enum PolygonBasedNodeShape implements Enumerator
{
  /**
   * The '<em><b>Octagon</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #OCTAGON_VALUE
   * @generated
   * @ordered
   */
  OCTAGON(0, "octagon", "octagon"),

  /**
   * The '<em><b>Oval</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #OVAL_VALUE
   * @generated
   * @ordered
   */
  OVAL(1, "oval", "oval"),

  /**
   * The '<em><b>Parallelogram</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #PARALLELOGRAM_VALUE
   * @generated
   * @ordered
   */
  PARALLELOGRAM(2, "parallelogram", "parallelogram"),

  /**
   * The '<em><b>Pentagon</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #PENTAGON_VALUE
   * @generated
   * @ordered
   */
  PENTAGON(3, "pentagon", "pentagon"),

  /**
   * The '<em><b>Plain</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #PLAIN_VALUE
   * @generated
   * @ordered
   */
  PLAIN(4, "plain", "plain"),

  /**
   * The '<em><b>Plaintext</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #PLAINTEXT_VALUE
   * @generated
   * @ordered
   */
  PLAINTEXT(5, "plaintext", "plaintext"),

  /**
   * The '<em><b>Point</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #POINT_VALUE
   * @generated
   * @ordered
   */
  POINT(6, "point", "point"),

  /**
   * The '<em><b>Polygon</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #POLYGON_VALUE
   * @generated
   * @ordered
   */
  POLYGON(7, "polygon", "polygon"),

  /**
   * The '<em><b>Primersite</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #PRIMERSITE_VALUE
   * @generated
   * @ordered
   */
  PRIMERSITE(8, "primersite", "primersite"),

  /**
   * The '<em><b>Promoter</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #PROMOTER_VALUE
   * @generated
   * @ordered
   */
  PROMOTER(9, "promoter", "promoter"),

  /**
   * The '<em><b>Proteasesite</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #PROTEASESITE_VALUE
   * @generated
   * @ordered
   */
  PROTEASESITE(10, "proteasesite", "proteasesite"),

  /**
   * The '<em><b>Proteinstab</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #PROTEINSTAB_VALUE
   * @generated
   * @ordered
   */
  PROTEINSTAB(11, "proteinstab", "proteinstab"),

  /**
   * The '<em><b>Rarrow</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #RARROW_VALUE
   * @generated
   * @ordered
   */
  RARROW(12, "rarrow", "rarrow"),

  /**
   * The '<em><b>Record</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #RECORD_VALUE
   * @generated
   * @ordered
   */
  RECORD(13, "record", "record"),

  /**
   * The '<em><b>Rect</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #RECT_VALUE
   * @generated
   * @ordered
   */
  RECT(14, "rect", "rect"),

  /**
   * The '<em><b>Rectangle</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #RECTANGLE_VALUE
   * @generated
   * @ordered
   */
  RECTANGLE(15, "rectangle", "rectangle"),

  /**
   * The '<em><b>Restrictionsite</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #RESTRICTIONSITE_VALUE
   * @generated
   * @ordered
   */
  RESTRICTIONSITE(16, "restrictionsite", "restrictionsite"),

  /**
   * The '<em><b>Ribosite</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #RIBOSITE_VALUE
   * @generated
   * @ordered
   */
  RIBOSITE(17, "ribosite", "ribosite"),

  /**
   * The '<em><b>Rnastab</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #RNASTAB_VALUE
   * @generated
   * @ordered
   */
  RNASTAB(18, "rnastab", "rnastab"),

  /**
   * The '<em><b>Rpromoter</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #RPROMOTER_VALUE
   * @generated
   * @ordered
   */
  RPROMOTER(19, "rpromoter", "rpromoter");

  /**
   * The '<em><b>Octagon</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Octagon</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #OCTAGON
   * @model name="octagon"
   * @generated
   * @ordered
   */
  public static final int OCTAGON_VALUE = 0;

  /**
   * The '<em><b>Oval</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Oval</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #OVAL
   * @model name="oval"
   * @generated
   * @ordered
   */
  public static final int OVAL_VALUE = 1;

  /**
   * The '<em><b>Parallelogram</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Parallelogram</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #PARALLELOGRAM
   * @model name="parallelogram"
   * @generated
   * @ordered
   */
  public static final int PARALLELOGRAM_VALUE = 2;

  /**
   * The '<em><b>Pentagon</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Pentagon</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #PENTAGON
   * @model name="pentagon"
   * @generated
   * @ordered
   */
  public static final int PENTAGON_VALUE = 3;

  /**
   * The '<em><b>Plain</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Plain</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #PLAIN
   * @model name="plain"
   * @generated
   * @ordered
   */
  public static final int PLAIN_VALUE = 4;

  /**
   * The '<em><b>Plaintext</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Plaintext</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #PLAINTEXT
   * @model name="plaintext"
   * @generated
   * @ordered
   */
  public static final int PLAINTEXT_VALUE = 5;

  /**
   * The '<em><b>Point</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Point</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #POINT
   * @model name="point"
   * @generated
   * @ordered
   */
  public static final int POINT_VALUE = 6;

  /**
   * The '<em><b>Polygon</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Polygon</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #POLYGON
   * @model name="polygon"
   * @generated
   * @ordered
   */
  public static final int POLYGON_VALUE = 7;

  /**
   * The '<em><b>Primersite</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Primersite</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #PRIMERSITE
   * @model name="primersite"
   * @generated
   * @ordered
   */
  public static final int PRIMERSITE_VALUE = 8;

  /**
   * The '<em><b>Promoter</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Promoter</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #PROMOTER
   * @model name="promoter"
   * @generated
   * @ordered
   */
  public static final int PROMOTER_VALUE = 9;

  /**
   * The '<em><b>Proteasesite</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Proteasesite</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #PROTEASESITE
   * @model name="proteasesite"
   * @generated
   * @ordered
   */
  public static final int PROTEASESITE_VALUE = 10;

  /**
   * The '<em><b>Proteinstab</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Proteinstab</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #PROTEINSTAB
   * @model name="proteinstab"
   * @generated
   * @ordered
   */
  public static final int PROTEINSTAB_VALUE = 11;

  /**
   * The '<em><b>Rarrow</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Rarrow</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #RARROW
   * @model name="rarrow"
   * @generated
   * @ordered
   */
  public static final int RARROW_VALUE = 12;

  /**
   * The '<em><b>Record</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Record</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #RECORD
   * @model name="record"
   * @generated
   * @ordered
   */
  public static final int RECORD_VALUE = 13;

  /**
   * The '<em><b>Rect</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Rect</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #RECT
   * @model name="rect"
   * @generated
   * @ordered
   */
  public static final int RECT_VALUE = 14;

  /**
   * The '<em><b>Rectangle</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Rectangle</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #RECTANGLE
   * @model name="rectangle"
   * @generated
   * @ordered
   */
  public static final int RECTANGLE_VALUE = 15;

  /**
   * The '<em><b>Restrictionsite</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Restrictionsite</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #RESTRICTIONSITE
   * @model name="restrictionsite"
   * @generated
   * @ordered
   */
  public static final int RESTRICTIONSITE_VALUE = 16;

  /**
   * The '<em><b>Ribosite</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Ribosite</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #RIBOSITE
   * @model name="ribosite"
   * @generated
   * @ordered
   */
  public static final int RIBOSITE_VALUE = 17;

  /**
   * The '<em><b>Rnastab</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Rnastab</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #RNASTAB
   * @model name="rnastab"
   * @generated
   * @ordered
   */
  public static final int RNASTAB_VALUE = 18;

  /**
   * The '<em><b>Rpromoter</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Rpromoter</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #RPROMOTER
   * @model name="rpromoter"
   * @generated
   * @ordered
   */
  public static final int RPROMOTER_VALUE = 19;

  /**
   * An array of all the '<em><b>Polygon Based Node Shape</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final PolygonBasedNodeShape[] VALUES_ARRAY =
    new PolygonBasedNodeShape[]
    {
      OCTAGON,
      OVAL,
      PARALLELOGRAM,
      PENTAGON,
      PLAIN,
      PLAINTEXT,
      POINT,
      POLYGON,
      PRIMERSITE,
      PROMOTER,
      PROTEASESITE,
      PROTEINSTAB,
      RARROW,
      RECORD,
      RECT,
      RECTANGLE,
      RESTRICTIONSITE,
      RIBOSITE,
      RNASTAB,
      RPROMOTER,
    };

  /**
   * A public read-only list of all the '<em><b>Polygon Based Node Shape</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<PolygonBasedNodeShape> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Polygon Based Node Shape</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static PolygonBasedNodeShape get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      PolygonBasedNodeShape result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Polygon Based Node Shape</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static PolygonBasedNodeShape getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      PolygonBasedNodeShape result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Polygon Based Node Shape</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static PolygonBasedNodeShape get(int value)
  {
    switch (value)
    {
      case OCTAGON_VALUE: return OCTAGON;
      case OVAL_VALUE: return OVAL;
      case PARALLELOGRAM_VALUE: return PARALLELOGRAM;
      case PENTAGON_VALUE: return PENTAGON;
      case PLAIN_VALUE: return PLAIN;
      case PLAINTEXT_VALUE: return PLAINTEXT;
      case POINT_VALUE: return POINT;
      case POLYGON_VALUE: return POLYGON;
      case PRIMERSITE_VALUE: return PRIMERSITE;
      case PROMOTER_VALUE: return PROMOTER;
      case PROTEASESITE_VALUE: return PROTEASESITE;
      case PROTEINSTAB_VALUE: return PROTEINSTAB;
      case RARROW_VALUE: return RARROW;
      case RECORD_VALUE: return RECORD;
      case RECT_VALUE: return RECT;
      case RECTANGLE_VALUE: return RECTANGLE;
      case RESTRICTIONSITE_VALUE: return RESTRICTIONSITE;
      case RIBOSITE_VALUE: return RIBOSITE;
      case RNASTAB_VALUE: return RNASTAB;
      case RPROMOTER_VALUE: return RPROMOTER;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private PolygonBasedNodeShape(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //PolygonBasedNodeShape
